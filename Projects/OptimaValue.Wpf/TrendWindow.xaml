<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:lv="clr-namespace:LiveCharts;assembly=LiveCharts"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:local="clr-namespace:OptimaValue.Wpf"
        xmlns:UserControls="clr-namespace:OptimaValue.Wpf.UserControls" 
  x:Class="OptimaValue.Wpf.TrendWindow"
        mc:Ignorable="d"
        Background="White"
        WindowStyle="ThreeDBorderWindow"
        x:Name="mainWindow"
        WindowStartupLocation="CenterScreen"
        Title="OptimaValue - Graf" 
        Height="850" 
        MinHeight="600"
        Width="1100" 
        MinWidth="1000" 
        RenderOptions.BitmapScalingMode="Fant"
        Icon="/icons8_area_chart_64.png" >
  <Window.Resources>
    <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="local:StatisticFilter"/>
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="dataFromZoom" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="lv:ZoomingOptions"/>
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="animationData" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="local:AnimationEnum"/>
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <Color x:Key="GrayBackground">#222a31</Color>
    <SolidColorBrush x:Key="BackgroundGray" Color="{DynamicResource GrayBackground}"/>

    <Color x:Key="GrayBackgroundTransparent">#222a31</Color>
    <SolidColorBrush x:Key="BackgroundGrayTransparent" Opacity="0.8" Color="{DynamicResource GrayBackground}"/>

    <LinearGradientBrush x:Key="horizontalGradient" StartPoint="0,0" EndPoint="1,0">
      <GradientStop Color="#222a31" Offset="0.0"/>
      <GradientStop Color="Black" Offset="0.5"/>
      <GradientStop Color="#222a31" Offset="1.0"/>
    </LinearGradientBrush>

    <BitmapImage x:Key="end" 
                     UriSource="Resurser/end_100px.png"/>
    <local:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <local:StringToTimeOnlyConverter x:Key="StringToTimeOnlyConverter"/>
    <local:DateTimeToVisibilityConverter x:Key="DateTimeToVisibilityConverter"/>
    <local:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter"/>

    <Style x:Key="FontAwesome">
      <Setter Property="TextElement.FontFamily" Value="/Fonts/fontawesome-webfont.ttf#FontAwesome" />
    </Style>

    <Style x:Key="growButton" TargetType="{x:Type Button}">
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>

  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" MinWidth="50"/>
      <ColumnDefinition Width="2.5*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="40"/>
      <RowDefinition Height="40"/>
      <RowDefinition Height="3*"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <GridSplitter Grid.Column="0" Grid.Row="2" Width="3"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Stretch" />
    <GridSplitter Grid.Row="2"
                  Grid.Column="1"
                  ResizeDirection="Rows"
                  ResizeBehavior="BasedOnAlignment"
                  VerticalAlignment="Bottom" 
                  HorizontalAlignment="Stretch"
                  Panel.ZIndex="1"
                  Height="3" 
                  ShowsPreview="True"/>


  </Grid>
</Window>
