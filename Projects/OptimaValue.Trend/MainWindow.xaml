<Window x:Class="OptimaValue.Trend.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OptimaValue.Trend"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        mc:Ignorable="d"
        Background="White"
        WindowStyle="ThreeDBorderWindow"
        x:Name="mainWindow"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        Title="OptimaValue - Graf" 
        Height="850" 
        MinHeight="600"
        Width="1100" 
        MinWidth="1000" 
        RenderOptions.BitmapScalingMode="Fant"
        Icon="/icons8_area_chart_64.png" >

  <Window.Resources>
    <local:ValueToColorConverter x:Key="ValueToColorConverter" />
    <local:ValidationResultToBooleanConverter x:Key="ValidationResultToBooleanConverter" />
    <local:StartEndDateValidationRule x:Key="StartEndDateValidationRule" />
    <local:StringToTimeOnlyConverter x:Key="StringToTimeOnlyConverter" />
    <local:DoubleToBoolConverter x:Key="DoubleToBoolConverter" />
    <local:SelectedItemToVisibilityConverter x:Key="SelectedItemToVisibilityConverter" />
    <local:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter" />
    <local:DarkThemeIconConverter x:Key="DarkThemeIconConverter" />

    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="validationTemplate">
      <DockPanel>
        <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
        <AdornedElementPlaceholder/>
      </DockPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}">
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="Transparent"/>
          <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">

            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                  x:Name="border"
                                  Margin="2"
                                  Height="20"
                                  Width="20"
                                  BorderThickness="4"            
                                  CornerRadius="4"
                                  Background="{TemplateBinding Background}">
              <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="Background" Value="#FF00FF00"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" MinWidth="50"/>
      <ColumnDefinition Width="4*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="40"/>
      <RowDefinition Height="40"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="4*"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Button Command="{Binding DarkThemeCommand}"
            Grid.Column="1" HorizontalAlignment="Right" Width="30" Height="30" Margin="10,0" BorderThickness="0" 
            Background="Transparent" Panel.ZIndex="30">
      <Image Source="{Binding DarkTheme,Converter={StaticResource DarkThemeIconConverter}}" />
    </Button>

    <Border Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Background="LightGray"/>

    <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1"
            Visibility="{Binding SelectedItem,Converter={StaticResource SelectedItemToVisibilityConverter}}"
            >
      <Border.Effect>
        <DropShadowEffect BlurRadius="5"
                          Color="Black"
                          Direction="120"
                          Opacity="0.5"
                          RenderingBias="Performance"
                          ShadowDepth="1" />
      </Border.Effect>
      <Border.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.95">
          <GradientStop Color="LightGray" Offset="0.0"/>
          <GradientStop Color="Gray" Offset="1.0"/>
        </LinearGradientBrush>
      </Border.Background>

    </Border>
    <StackPanel Orientation="Horizontal"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Visibility="{Binding SelectedItem,Converter={StaticResource SelectedItemToVisibilityConverter}}">
      <Button
              ToolTip="Flytta vald trend nedåt"
              Width="30"
              Height="30"
              Margin="5,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderThickness="0"
              Command="{Binding MoveDownCommand}" >
        <Image Source="Resurser/falling_edge_24px.png"/>
      </Button>
      <Button
              ToolTip="Flytta vald trend uppåt"
              Width="30"
              Height="30"
              Margin="0 0 2 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderThickness="0"
              Command="{Binding MoveUpCommand}" >
        <Image Source="Resurser/rising_edge_24px.png"/>
      </Button>
      <Button
              ToolTip="Skalera till original storlek"
              Width="30"
              Height="30"
              Margin="0 0 2 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderThickness="0"
              Command="{Binding ScaleOriginalCommand}" >
        <Image Source="Resurser/flash_on_24px.png"/>
      </Button>
      <Button
              ToolTip="Autoskalera"
              Width="30"
              Height="30"
              Margin="0 0 2 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderThickness="0"
              Command="{Binding AutoScaleCommand}" >
        <Image Source="Resurser/scale_24px.png"/>
      </Button>
    </StackPanel>

    <GridSplitter Grid.Column="0" Grid.Row="2" Grid.RowSpan="2" Width="3"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Stretch" />
    <GridSplitter Grid.Row="3"
                  Grid.Column="1"
                  ResizeDirection="Rows"
                  ResizeBehavior="BasedOnAlignment"
                  VerticalAlignment="Bottom" 
                  HorizontalAlignment="Stretch"
                  Panel.ZIndex="1"
                  Height="3" 
                  ShowsPreview="True"/>

    <!-- Top bar -->
    <Grid Grid.ColumnSpan="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <TextBlock Margin="5" Grid.Column="1" Text="{Binding StatusMessage}" HorizontalAlignment="Right"/>
    </Grid>


    <!-- Tillgängliga taggar -->
    <DataGrid x:Name="DataGrid"
              Grid.Column="0"  
              Grid.RowSpan="3"
              Grid.Row="2" 
              AutoGenerateColumns="False"
              VerticalAlignment="Stretch" 
              Margin="6" 
              ItemsSource="{Binding AvailableItems}"
              SelectionMode="Single"
              CanUserResizeRows="False"
              CanUserResizeColumns="True"
              IsReadOnly="True"
              dd:DragDrop.IsDragSource="True"
              dd:DragDrop.IsDropTarget="False" 
              dd:DragDrop.UseDefaultDragAdorner="True"
              dd:DragDrop.UseDefaultEffectDataTemplate="True"
              >
      <DataGrid.Columns>
        <DataGridTextColumn Header="Namn" Binding="{Binding name}" IsReadOnly="True" />
        <DataGridTextColumn Header="Beskrivning" Binding="{Binding description}" IsReadOnly="True"   />
      </DataGrid.Columns>

    </DataGrid>

    <!-- Graf taggar -->
    <DataGrid x:Name="DataGridTags"
              dd:DragDrop.DropHandler="{Binding}"
              Grid.Column="1"
              Grid.Row="4"
              ItemsSource="{Binding SelectedItems}"
              SelectionMode="Single"
              AutoGenerateColumns="False"
              SelectedItem="{Binding SelectedItem}"
              CanUserAddRows="False"
              IsReadOnly="False"
              dd:DragDrop.IsDragSource="True"
              dd:DragDrop.IsDropTarget="True" 
              dd:DragDrop.UseDefaultDragAdorner="True"
              dd:DragDrop.UseDefaultEffectDataTemplate="True">

      <DataGrid.Columns>
        <DataGridTemplateColumn Header="Tag-namn">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal">
                <ToggleButton 
                  x:Name="toggleButton" IsChecked="{Binding active,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged
                  }" Margin="5,0" >
                </ToggleButton>
                <TextBlock Text="{Binding name}" VerticalAlignment="Center"/>
              </StackPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <DataGridTextColumn Header="Beskrivning" Binding="{Binding description}" IsReadOnly="True"/>
        <DataGridTextColumn Header="TrendLo" Binding="{Binding scaleMin,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="TrendHi" Binding="{Binding scaleMax,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTextColumn Header="TrendOffset" Binding="{Binding scaleOffset,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
        <DataGridCheckBoxColumn Header="Smoothing" Binding="{Binding smoothing,Converter={StaticResource DoubleToBoolConverter},UpdateSourceTrigger=PropertyChanged}" />
        <DataGridTemplateColumn Header="LinjeFärg">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <xctk:ColorPicker SelectedColor="{Binding LineColor,Converter={StaticResource ValueToColorConverter},UpdateSourceTrigger=PropertyChanged}" 
                                DisplayColorAndName="True"
                                Foreground="Black"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Fyllfärg">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <xctk:ColorPicker SelectedColor="{Binding FillColor,Converter={StaticResource ValueToColorConverter},UpdateSourceTrigger=PropertyChanged}" 
                                DisplayColorAndName="True"
                                Foreground="Black"
                                />
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>


      <DataGrid.RowValidationRules>
        <local:GridItemValidationRule ValidationStep="UpdatedValue"/>
      </DataGrid.RowValidationRules>
      <DataGrid.RowValidationErrorTemplate>
        <ControlTemplate>
          <Grid Margin="0,-2,0,-2"
                ToolTip="{Binding RelativeSource={RelativeSource
                FindAncestor, AncestorType={x:Type DataGridRow}},
                Path=(Validation.Errors)[0].ErrorContent}">
            <Ellipse StrokeThickness="0" Fill="Red" 
                     Width="{TemplateBinding FontSize}" 
                     Height="{TemplateBinding FontSize}" />
            <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
                       FontWeight="Bold" Foreground="White" 
                       HorizontalAlignment="Center"  />
          </Grid>
        </ControlTemplate>
      </DataGrid.RowValidationErrorTemplate>
    </DataGrid>

    <!-- Tid -->
    <Grid  Grid.Row="1" Grid.Column="1" Margin="10,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <StackPanel Orientation="Horizontal" 
                Margin="10,0"
                VerticalAlignment="Center">
        <DatePicker SelectedDate="{Binding InputStartDate}"
                    Margin="10,0"/>
        <TextBox Text="{Binding InputStartTime,Converter={StaticResource StringToTimeOnlyConverter}}"
                 VerticalAlignment="Center"
                 Padding="5"
                 Width="60" />
      </StackPanel>

      <StackPanel Orientation="Horizontal" Grid.Column="1" 
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center">
        <DatePicker SelectedDate="{Binding InputEndDate}"
                    Margin="10,0"/>
        <TextBox Text="{Binding InputEndTime,Converter={StaticResource StringToTimeOnlyConverter}}" 
                 VerticalAlignment="Center"
                 Padding="5"
                 Width="60" />
      </StackPanel>
    </Grid>


    <!-- Top på graf -->
    <Grid Grid.Column="1" Grid.Row="2" VerticalAlignment="Top"
          Visibility="{Binding Series,Converter={StaticResource NotNullToVisibilityConverter},UpdateSourceTrigger=PropertyChanged}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <TextBox Margin="20,5" FontSize="16" Foreground="Black" MinWidth="152"
               Validation.ErrorTemplate="{StaticResource validationTemplate}"
               Style="{StaticResource textBoxInError}">
        <TextBox.Text>
          <Binding Path="MinDateSeries" UpdateSourceTrigger="PropertyChanged">
            <Binding.ValidationRules>
              <local:StartEndDateValidationRule IsStartDate="True" />
            </Binding.ValidationRules>
          </Binding>
        </TextBox.Text>
      </TextBox>
      <TextBox Grid.Column="2" Margin="10,5" HorizontalAlignment="Right" FontSize="16"  MinWidth="152"
               Validation.ErrorTemplate="{StaticResource validationTemplate}">
        <TextBox.Text>
          <Binding Path="MaxDateSeries" UpdateSourceTrigger="PropertyChanged">
            <Binding.ValidationRules>
              <local:StartEndDateValidationRule IsStartDate="False" />
            </Binding.ValidationRules>
          </Binding>
        </TextBox.Text>
      </TextBox>
      <StackPanel Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center">
        <TextBlock Margin="10,5" 
                 Text="{Binding DiffTimeSeries,StringFormat='{}{0:dd\\ hh\\:mm\\:ss}'}"
                 HorizontalAlignment="Center" FontSize="16" Foreground="Black"/>
        <!-- Ladda om tid -->
        <Button Command="{Binding LoadDataCommand}"
                Margin="0,2"
                BorderThickness="0"
                Grid.ColumnSpan="2" HorizontalAlignment="Center" Width="24" Height="24"
                Background="Transparent">
          <Image Source="Resurser/refresh_24px.png"/>
        </Button>
      </StackPanel>

    </Grid>
    <!-- Trend graf -->
    <lvc:CartesianChart     Background="{Binding TrendBackGround}"
                            Grid.Column="1"
                            Grid.Row="3"
                            Margin="20 0 10 20"
                            Series="{Binding Series}"
                            AxisY="{Binding AxisCollection}"
                            x:Name="MyChart"
                            Zoom="{Binding Zoom}" 
                            DisableAnimations="True"
                            Hoverable="False">
      <lvc:CartesianChart.Resources>
        <Style TargetType="lvc:Separator">
          <Setter Property="StrokeThickness" Value="2.5"></Setter>
          <Setter Property="Stroke" Value="#FF838383"></Setter>
          <Style.Triggers>
            <Trigger Property="AxisOrientation" Value="X">
              <Setter Property="IsEnabled" Value="false"></Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </lvc:CartesianChart.Resources>
    </lvc:CartesianChart>


  </Grid>
</Window>


